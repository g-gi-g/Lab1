@model IEnumerable<MarketplaceWebApplication.Data.Offer>
@using Microsoft.AspNetCore.Http
@using MarketplaceWebApplication.Extensions
@using MarketplaceWebApplication.Models
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Головна сторінка";
    var userInfo = HttpContextAccessor.HttpContext.Session.GetObjectFromJson<UserDetails>("UserDetails");

    if (String.IsNullOrEmpty(ViewBag.SearchWord))
    {
        ViewBag.SearchWord = "";
    }
    List<OffersRatings> ORList = ViewBag.ORList;
}
<hr />
<label for="Text" class="control-label" style="margin-right: 10px;">Пошук</label>
<form asp-action="MainPageView" asp-controller="Offers" method="get" style="display: flex; align-items: center;">
    <input name="searchWord" class="form-control" value="@ViewBag.SearchWord" style="margin-right: 10px;" />
    <select name="selectedCategory" class="form-control" asp-items="ViewBag.OfferCat"></select>
    <button type="submit" class="btn btn-primary">Шукати за фільтром</button>
</form>

<hr />

@if (Model.Count() == 0)
{
    <h1>На жаль, нічого не знайдено</h1>
}
else
{
    <h5>Статистика товарів по категоріям</h5>

    <div class="row">
        <div class="col-3">
            <div id="countByCatsChart"></div>
        </div>
    </div>
    @section Scripts
    {
    <script type="text/javascript"
            src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawCharts);
        function drawCharts() {
            const categoryNames = {
                1: 'Рослини',
                2: 'Товари для кухні',
                3: 'Товари для саду',
                4: 'Товари для хобі',
                5: 'Електроніка'
            };

            fetch(`/api/charts/countOffersByCats`)
                .then(response => response.json())
                .then(data => {
                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Категорія');
                    dataTable.addColumn('number', 'Кількість');

                    data.forEach(item => {
                        const categoryName = categoryNames[item.cat];
                        dataTable.addRow([categoryName, item.count]);
                    });

                    const options = {
                        title: 'Кількість товарів за категоріями',
                        width: 1400,
                        height: 400,
                        legend: { position: 'none' },
                    };

                    const chart = new google.visualization.ColumnChart(document.getElementById('countByCatsChart'));
                    chart.draw(dataTable, options);
                });
        }
    </script>
    }
    <div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var item in Model)
    {
        @if (!item.IsDeleted && !item.IsHidden)
        {
            <div class="col">
                <div class="card" style="width: 25rem;">
                    @if (item.Photo != null && item.Photo.Length > 0)
                    {
                        string base64String = Convert.ToBase64String(item.Photo);
                            <img src="data:image;base64,@base64String" class="card-img-top" alt="Photo" /> <!--style="max-width: 100%; max-height: 350px;"-->
                    }
                    else
                    {
                        <div class="card-img-top" style="background-color: #f0f0f0; height: 200px;"></div>
                    }
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                        @{
                            var rating = ORList.FirstOrDefault(or => or.OfferId == item.Id).Rating;
                            if (rating != -1)
                            {
                                var roundedRating = Math.Floor(rating);
                                <p class="card-text">
                                    @{
                                        for (int i = 0; i < roundedRating; i++)
                                        {
                                                <span class="star" style="font-size: 20px;">&#9733;</span>
                                        }
                                        for (int i = 0; i < 5 - roundedRating; i++)
                                        {
                                            <span class="star" style="font-size: 20px;">&#9734;</span>
                                        }
                                    }
                                    (@(roundedRating) / 5)
                                </p>
                            }
                            else
                            {
                                <p class="card-text">Немає відгуків</p>
                            }
                        }
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Price) грн</p>
                        <p class="card-text" style="font-size: smaller;">Доступно @Html.DisplayFor(modelItem => item.ItemAmount) шт.</p>
                        <p class="card-text"><a href="@Url.Action("Details", "Users", 
                            new { id = item.SellerId })"> @Html.DisplayFor(modelItem => item.Seller.Username) </a></p>
                        <div style="display: inline-block; background-color: #e5e5e5; padding: 5px 10px; border-radius: 5px;">
                            <p class="card-text">@Html.DisplayFor(modelItem => item.Category.Name)</p>
                        </div>
                    </div>
                    <ul class="list-group list-group-flush">
                        @if (userInfo is not null && item.SellerId != userInfo.Id)
                        {
                            <li class="list-group-item">
                                <a href="@Url.Action("Create", "OrderItems", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Замовити</a>
                            </li>
                            <li class="list-group-item">
                                <a href="@Url.Action("Save", "SavedOffers", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Зберегти</a>
                            </li>
                            <li class="list-group-item">
                                    <a href="@Url.Action("Create", "Feedbacks", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Додати відгук</a>
                            </li>
                        }
                        <li class="list-group-item">
                            <a href="@Url.Action("Index", "Feedbacks", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Відгуки</a>
                        </li>
                        <li class="list-group-item">
                            <a href="@Url.Action("Details", "Offers", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Деталі</a>
                        </li>
                    </ul>
                    <div class="card-body">
                            <p class="card-text">Створено @item.TimeAdded.Date.ToString("dd.MM.yyyy")</p>
                    </div>
                </div>
            </div>
        }
    }
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var maxHeight = 0;
        $('.card').each(function () {
            var cardHeight = $(this).height();
            if (cardHeight > maxHeight) {
                maxHeight = cardHeight;
            }
        });
        $('.card').height(maxHeight);
    });
</script>