@model IEnumerable<MarketplaceWebApplication.Data.Offer>

@{
    ViewData["Title"] = "Пропозиції";
    if (String.IsNullOrEmpty(ViewBag.SearchWord))
    {
        ViewBag.SearchWord = "";
    }

    List<OffersRatings> ORList = ViewBag.ORList;
}

@if (Model.Count() == 0 && String.IsNullOrEmpty(ViewBag.SearchWord))
{
    <h1 style="text-align:center">Ви поки-що не додали жодної пропозиції</h1>
    <p>
        <a asp-action="Create" class="btn btn-primary">Додати свою пропозицію</a>
    </p>
    <a class="btn btn-primary mb-3" type="submit" asp-area="" asp-controller="Offers" asp-action="Import">Завантажити з файлу</a>
}
else 
{
    <p><h2 style="text-align:center">Ваші товари</h2></p>
    <hr />
    <label for="Text" class="control-label" style="margin-right: 10px;">Пошук</label>
    <form asp-action="Index" asp-controller="Offers" method="get" style="display: flex; align-items: center;">
        <input name="searchWord" class="form-control" value="@ViewBag.SearchWord" style="margin-right: 10px;" />
        <button type="submit" class="btn btn-primary">Шукати</button>
    </form>
    <hr />
    <p>
        <a asp-action="Create" class="btn btn-primary mb-3">Додати свою пропозицію</a>
        <a class="btn btn-primary mb-3" type="submit" asp-area="" asp-controller="Offers" asp-action="Import">Завантажити з файлу</a>
        <a class="btn btn-primary mb-3" type="submit" asp-area="" asp-controller="Offers" asp-action="Export">Експортувати у файл</a>
    </p>

    if (Model.Count() == 0)
    {
        <h1>Нічого не знайдено</h1>
    }
    else 
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    @if (!item.IsDeleted && !item.IsHidden)
                    {
                        <div class="card" style="width: 25rem;">
                            @if (item.Photo != null && item.Photo.Length > 0)
                            {
                                string base64String = Convert.ToBase64String(item.Photo);
                                <img src="data:image;base64,@base64String" class="card-img-top" alt="Photo" />
                            }
                            else
                            {
                                <div class="card-img-top" style="background-color: #f0f0f0; height: 200px;"></div>
                            }
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                                @{
                                    var rating = ORList.FirstOrDefault(or => or.OfferId == item.Id).Rating;
                                    if (rating != -1)
                                    {
                                        var roundedRating = Math.Floor(rating);
                                        <p class="card-text">
                                            @{
                                                for (int i = 0; i < roundedRating; i++)
                                                {
                                                    <span class="star" style="font-size: 20px;">&#9733;</span>
                                                }
                                                for (int i = 0; i < 5 - roundedRating; i++)
                                                {
                                                    <span class="star" style="font-size: 20px;">&#9734;</span>
                                                }
                                            }
                                            (@(roundedRating) / 5)
                                        </p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Немає відгуків</p>
                                    }
                                }
                                <p class="card-text">@Html.DisplayFor(modelItem => item.Price) грн</p>
                                <p class="card-text" style="font-size: smaller;">Доступно @Html.DisplayFor(modelItem => item.ItemAmount) шт.</p>
                                <div style="display: inline-block; background-color: #e5e5e5; padding: 5px 10px; border-radius: 5px;">
                                    <p class="card-text">@Html.DisplayFor(modelItem => item.Category.Name)</p>
                                </div>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    <a href="@Url.Action("Details", "Offers", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Деталі</a>
                                </li>
                                <li class="list-group-item">
                                    <a href="@Url.Action("Edit", "Offers", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Редагувати</a>
                                </li>
                                <li class="list-group-item">
                                    <a href="@Url.Action("Delete", "Offers", new { id = item.Id })" class="btn btn-danger mt-auto w-100">Видалити</a>
                                </li>
                            </ul>
                            <div class="card-body">
                                <p class="card-text">Створено @item.TimeAdded.Date.ToString("dd.MM.yyyy")</p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="card bg-secondary" style="width: 25rem;">
                            @if (item.Photo != null && item.Photo.Length > 0)
                            {
                                string base64String = Convert.ToBase64String(item.Photo);
                                <img src="data:image;base64,@base64String" class="card-img-top" alt="Photo" />
                            }
                            else
                            {
                                <div class="card-img-top" style="background-color: #f0f0f0; height: 200px;"></div>
                            }
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                                @{
                                    var rating = ORList.FirstOrDefault(or => or.OfferId == item.Id).Rating;
                                    if (rating != -1)
                                    {
                                        var roundedRating = Math.Floor(rating);
                                        <p class="card-text">
                                            @{
                                                for (int i = 0; i < roundedRating; i++)
                                                {
                                                    <span class="star" style="font-size: 20px;">&#9733;</span>
                                                }
                                                for (int i = 0; i < 5 - roundedRating; i++)
                                                {
                                                    <span class="star" style="font-size: 20px;">&#9734;</span>
                                                }
                                            }
                                            (@(roundedRating) / 5)
                                        </p>
                                    }
                                    else
                                    {
                                        <p class="card-text">Немає відгуків</p>
                                    }
                                }
                                <p class="card-text">@Html.DisplayFor(modelItem => item.Price) грн</p>
                                <p class="card-text" style="font-size: smaller;">Недоступний</p>
                                <div style="display: inline-block; background-color: #c0c0c0; padding: 5px 10px; border-radius: 5px;">
                                    <p class="card-text">@Html.DisplayFor(modelItem => item.Category.Name)</p>
                                </div>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item bg-secondary">
                                    <a href="@Url.Action("Details", "Offers", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Деталі</a>
                                </li>
                                @if (!item.IsDeleted) 
                                {
                                    <li class="list-group-item bg-secondary">
                                        <a href="@Url.Action("Edit", "Offers", new { id = item.Id })" class="btn btn-primary mt-auto w-100">Редагувати</a>
                                    </li>
                                    <li class="list-group-item bg-secondary">
                                        <a href="@Url.Action("Delete", "Offers", new { id = item.Id })" class="btn btn-danger mt-auto w-100">Видалити</a>
                                    </li>
                                }
                            </ul>
                            <div class="card-body">
                                <p class="card-text">Створено @item.TimeAdded.Date.ToString("dd.MM.yyyy")</p>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var maxHeight = 0;
        $('.card').each(function () {
            var cardHeight = $(this).height();
            if (cardHeight > maxHeight) {
                maxHeight = cardHeight;
            }
        });
        $('.card').height(maxHeight);
    });
</script>