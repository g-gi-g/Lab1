@model MarketplaceWebApplication.Models.UserChats
@using Microsoft.AspNetCore.Http
@using MarketplaceWebApplication.Extensions
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Чати";
    var userInfo = HttpContextAccessor.HttpContext.Session.GetObjectFromJson<UserDetails>("UserDetails");
}

<h1>Ваші чати</h1>

<label>
    <input type="radio" id="Buyer" name="BuyerSeller">
    Чати з покупцями
</label>
<label>
    <input type="radio" id="Seller" name="BuyerSeller" checked>
    Чати з продавцями
</label>

<script>
    document.getElementById("Buyer").addEventListener("click", function () {
        var selectedOption = this.value;
        updateChatIndex(selectedOption);
    });

    document.getElementById("Seller").addEventListener("click", function () {
        var selectedOption = this.value;
        updateChatIndex(selectedOption);
    });

    function updateChatIndex(selectedOption) {
        fetch('/ChatsController/UpdateIndex', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                selectedOption: selectedOption
            })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
            })
            .catch(error => {
                console.error('There was an error!', error);
            });
    }
</script>


<table class="table">
    <thead>
        <tr>
            <th>
                Час створення
            </th>
            <th>
                Назва товару
            </th>
            <th>
                Співрозмовник
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @if ((string?)ViewData["Message"] == "BuyerChatsSelected")
        {
            foreach (var item in Model.AsASeller)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimeCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Offer.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Offer.Name)
                    </td>

                    <td>
                        @Html.DisplayFor((modelItem => Model.ChatsBuyers.Where(c => c.ChatId == item.Id)
                        .Select(cb => cb.BuyerLogin)
                        .ToList()))
                    </td>
                    <td>
                        <a asp-controller="Messages" asp-action="Index" asp-route-id="@item.Id" class="btn btn-primary" style="margin: 5px;">Продивитися</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-primary" style="margin: 5px;">Видалити</a>
                    </td>
                </tr>
            }
        }
        else
        {
            foreach (var item in Model.AsABuyer)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimeCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Offer.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Offer.Seller.Username)
                    </td>
                    <td>
                        <a asp-controller="Messages" asp-action="Index" asp-route-id="@item.Id" class="btn btn-primary" style="margin: 5px;">Продивитися</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-primary" style="margin: 5px;">Видалити</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>